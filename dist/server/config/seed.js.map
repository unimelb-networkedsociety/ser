{"version":3,"sources":["config/seed.js"],"names":["seedDatabaseIfNeeded","seedDB","find","remove","then","create","provider","name","email","password","role","console","log","catch","err"],"mappings":"AAAA;;;;;AAKA;;;;;kBAIwBA,oB;;AAHxB;;;;AACA;;;;;;AAEe,SAASA,oBAAT,GAAgC;AAC7C,MAAG,sBAAOC,MAAV,EAAkB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAKC,IAAL,CAAU,EAAV,EAAcC,MAAd,GACGC,IADH,CACQ,YAAM;AACV,qBAAKC,MAAL,CAAY;AACVC,kBAAU,OADA;AAEVC,cAAM,WAFI;AAGVC,eAAO,kBAHG;AAIVC,kBAAU;AAJA,OAAZ,EAKG;AACDH,kBAAU,OADT;AAEDI,cAAM,OAFL;AAGDH,cAAM,OAHL;AAIDC,eAAO,mBAJN;AAKDC,kBAAU;AALT,OALH,EAYCL,IAZD,CAYM;AAAA,eAAMO,QAAQC,GAAR,CAAY,2BAAZ,CAAN;AAAA,OAZN,EAaCC,KAbD,CAaO;AAAA,eAAOF,QAAQC,GAAR,CAAY,wBAAZ,EAAsCE,GAAtC,CAAP;AAAA,OAbP;AAcD,KAhBH;AAiBD;AACF","file":"seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\nimport User from '../api/user/user.model';\nimport config from './environment/';\n\nexport default function seedDatabaseIfNeeded() {\n  if(config.seedDB) {\n    // Thing.find({}).remove()\n    //   .then(() => {\n    //     let thing = Thing.create({\n    //       name: 'Development Tools',\n    //       info: 'Integration with popular tools such as Webpack, Gulp, Babel, TypeScript, Karma, '\n    //             + 'Mocha, ESLint, Node Inspector, Livereload, Protractor, Pug, '\n    //             + 'Stylus, Sass, and Less.'\n    //     }, {\n    //       name: 'Server and Client integration',\n    //       info: 'Built with a powerful and fun stack: MongoDB, Express, '\n    //             + 'AngularJS, and Node.'\n    //     }, {\n    //       name: 'Smart Build System',\n    //       info: 'Build system ignores `spec` files, allowing you to keep '\n    //             + 'tests alongside code. Automatic injection of scripts and '\n    //             + 'styles into your index.html'\n    //     }, {\n    //       name: 'Modular Structure',\n    //       info: 'Best practice client and server structures allow for more '\n    //             + 'code reusability and maximum scalability'\n    //     }, {\n    //       name: 'Optimized Build',\n    //       info: 'Build process packs up your templates as a single JavaScript '\n    //             + 'payload, minifies your scripts/css/images, and rewrites asset '\n    //             + 'names for caching.'\n    //     }, {\n    //       name: 'Deployment Ready',\n    //       info: 'Easily deploy your app to Heroku or Openshift with the heroku '\n    //             + 'and openshift subgenerators'\n    //     });\n    //     return thing;\n    //   })\n    //   .then(() => console.log('finished populating things'))\n    //   .catch(err => console.log('error populating things', err));\n\n    User.find({}).remove()\n      .then(() => {\n        User.create({\n          provider: 'local',\n          name: 'Test User',\n          email: 'test@example.com',\n          password: 'test'\n        }, {\n          provider: 'local',\n          role: 'admin',\n          name: 'Admin',\n          email: 'admin@example.com',\n          password: 'admin'\n        })\n        .then(() => console.log('finished populating users'))\n        .catch(err => console.log('error populating users', err));\n      });\n  }\n}\n"]}